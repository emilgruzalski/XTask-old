//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XTaskWpfApp.XTaskServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://XTaskService", ConfigurationName="XTaskServiceReference.IXTask")]
    public interface IXTask {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://XTaskService/IXTask/InsertLog", ReplyAction="http://XTaskService/IXTask/InsertLogResponse")]
        void InsertLog(string process, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://XTaskService/IXTask/InsertLog", ReplyAction="http://XTaskService/IXTask/InsertLogResponse")]
        System.Threading.Tasks.Task InsertLogAsync(string process, string action);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXTaskChannel : XTaskWpfApp.XTaskServiceReference.IXTask, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XTaskClient : System.ServiceModel.ClientBase<XTaskWpfApp.XTaskServiceReference.IXTask>, XTaskWpfApp.XTaskServiceReference.IXTask {
        
        public XTaskClient() {
        }
        
        public XTaskClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XTaskClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XTaskClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XTaskClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertLog(string process, string action) {
            base.Channel.InsertLog(process, action);
        }
        
        public System.Threading.Tasks.Task InsertLogAsync(string process, string action) {
            return base.Channel.InsertLogAsync(process, action);
        }
    }
}
